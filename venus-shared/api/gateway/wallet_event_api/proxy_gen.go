// Code generated by github.com/filecoin-project/venus/venus-devtool/api-gen. DO NOT EDIT.
package wallet_event_api

import (
	"context"

	address "github.com/filecoin-project/go-address"

	"github.com/filecoin-project/venus/venus-shared/types"
	"github.com/filecoin-project/venus/venus-shared/types/gateway"
)

type IWalletEventAPIStruct struct {
	Internal struct {
		AddNewAddress       func(ctx context.Context, channelId types.UUID, newAddrs []address.Address) error                     `perm:"write"`
		ListenWalletEvent   func(ctx context.Context, policy *gateway.WalletRegisterPolicy) (<-chan *gateway.RequestEvent, error) `perm:"write"`
		RemoveAddress       func(ctx context.Context, channelId types.UUID, newAddrs []address.Address) error                     `perm:"write"`
		ResponseWalletEvent func(ctx context.Context, resp *gateway.ResponseEvent) error                                          `perm:"write"`
		SupportNewAccount   func(ctx context.Context, channelId types.UUID, account string) error                                 `perm:"write"`
	}
}

func (s *IWalletEventAPIStruct) AddNewAddress(p0 context.Context, p1 types.UUID, p2 []address.Address) error {
	return s.Internal.AddNewAddress(p0, p1, p2)
}
func (s *IWalletEventAPIStruct) ListenWalletEvent(p0 context.Context, p1 *gateway.WalletRegisterPolicy) (<-chan *gateway.RequestEvent, error) {
	return s.Internal.ListenWalletEvent(p0, p1)
}
func (s *IWalletEventAPIStruct) RemoveAddress(p0 context.Context, p1 types.UUID, p2 []address.Address) error {
	return s.Internal.RemoveAddress(p0, p1, p2)
}
func (s *IWalletEventAPIStruct) ResponseWalletEvent(p0 context.Context, p1 *gateway.ResponseEvent) error {
	return s.Internal.ResponseWalletEvent(p0, p1)
}
func (s *IWalletEventAPIStruct) SupportNewAccount(p0 context.Context, p1 types.UUID, p2 string) error {
	return s.Internal.SupportNewAccount(p0, p1, p2)
}
